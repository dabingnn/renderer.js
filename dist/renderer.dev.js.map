{"version":3,"file":"renderer.dev.js","sources":["../lib/builtin/textures.js","../lib/builtin/index.js","../lib/enums.js","../lib/renderer/base.js","../lib/renderer/forward.js","../lib/init.js","../lib/resources/mesh.js","../lib/utils.js","../lib/resources/pass.js","../lib/resources/technique.js","../lib/resources/material.js","../lib/scene/light.js","../lib/scene/camera.js","../lib/scene/model.js","../lib/scene/scene.js","../index.js"],"sourcesContent":["import gfx from 'gfx';\n\nexport default function (device) {\n  let canvas = document.createElement('canvas');\n  let context = canvas.getContext('2d');\n\n  // default texture\n  canvas.width = canvas.height = 128;\n  context.fillStyle = '#ddd';\n  context.fillRect(0, 0, 128, 128);\n  context.fillStyle = '#555';\n  context.fillRect(0, 0, 64, 64);\n  context.fillStyle = '#555';\n  context.fillRect(64, 64, 64, 64);\n\n  let defaultTexture = new gfx.Texture2D(device, {\n    images: [canvas],\n    width: 128,\n    height: 128,\n    wrapS: gfx.WRAP_REPEAT,\n    wrapT: gfx.WRAP_REPEAT,\n    format: gfx.TEXTURE_FMT_RGB8,\n    mipmap: true,\n  });\n\n  return {\n    defaultTexture,\n    // defaultTextureCube, // TODO\n  };\n}","import initTextures from './textures';\n\nexport default function (device) {\n  let builtin = {};\n  Object.assign(builtin, initTextures(device));\n\n  return builtin;\n}","export const enums = {\n  // perspective\n  PP_PROJECTION: 0,\n  PP_ORTHO: 1,\n\n  // stages\n  STAGE_OPAQUE:       0x00000001,\n  STAGE_TRANSPARENT:  0x00000002,\n  STAGE_SHADOWCAST:   0x00000004,\n\n  // parameter type\n  PARAM_INT:             0,\n  PARAM_INT2:            1,\n  PARAM_INT3:            2,\n  PARAM_INT4:            3,\n  PARAM_FLOAT:           4,\n  PARAM_FLOAT2:          5,\n  PARAM_FLOAT3:          6,\n  PARAM_FLOAT4:          7,\n  PARAM_COLOR3:          8,\n  PARAM_COLOR4:          9,\n  PARAM_MAT2:           10,\n  PARAM_MAT3:           11,\n  PARAM_MAT4:           12,\n  PARAM_TEXTURE_2D:     13,\n  PARAM_TEXTURE_CUBE:   14,\n};\n","import { FramePool, RecyclePool } from 'memop';\nimport { enums } from '../enums';\nimport { vec2, vec3, vec4, mat2, mat3, mat4, color3, color4 } from 'vmath';\n\nlet _m3_tmp = mat3.create();\nlet _m4_tmp = mat4.create();\n\nlet _stageInfos = new FramePool(() => {\n  return {\n    stage: null,\n    items: null,\n  };\n}, 8);\n\nlet _float2_pool = new FramePool(() => {\n  return new Float32Array(2);\n}, 8);\n\nlet _float3_pool = new FramePool(() => {\n  return new Float32Array(3);\n}, 8);\n\nlet _float4_pool = new FramePool(() => {\n  return new Float32Array(4);\n}, 8);\n\nlet _float9_pool = new FramePool(() => {\n  return new Float32Array(9);\n}, 8);\n\nlet _float16_pool = new FramePool(() => {\n  return new Float32Array(16);\n}, 8);\n\nlet _int2_pool = new FramePool(() => {\n  return new Int32Array(2);\n}, 8);\n\nlet _int3_pool = new FramePool(() => {\n  return new Int32Array(3);\n}, 8);\n\nlet _int4_pool = new FramePool(() => {\n  return new Int32Array(3);\n}, 8);\n\nlet _type2uniformValue = {\n  [enums.PARAM_INT]: function (value) {\n    return value;\n  },\n\n  [enums.PARAM_INT2]: function (value) {\n    return vec2.array(_int2_pool.alloc(), value);\n  },\n\n  [enums.PARAM_INT3]: function (value) {\n    return vec3.array(_int3_pool.alloc(), value);\n  },\n\n  [enums.PARAM_INT4]: function (value) {\n    return vec4.array(_int4_pool.alloc(), value);\n  },\n\n  [enums.PARAM_FLOAT]: function (value) {\n    return value;\n  },\n\n  [enums.PARAM_FLOAT2]: function (value) {\n    return vec2.array(_float2_pool.alloc(), value);\n  },\n\n  [enums.PARAM_FLOAT3]: function (value) {\n    return vec3.array(_float3_pool.alloc(), value);\n  },\n\n  [enums.PARAM_FLOAT4]: function (value) {\n    return vec4.array(_float4_pool.alloc(), value);\n  },\n\n  [enums.PARAM_COLOR3]: function (value) {\n    return color3.array(_float3_pool.alloc(), value);\n  },\n\n  [enums.PARAM_COLOR4]: function (value) {\n    return color4.array(_float4_pool.alloc(), value);\n  },\n\n  [enums.PARAM_MAT2]: function (value) {\n    return mat2.array(_float4_pool.alloc(), value);\n  },\n\n  [enums.PARAM_MAT3]: function (value) {\n    return mat3.array(_float9_pool.alloc(), value);\n  },\n\n  [enums.PARAM_MAT4]: function (value) {\n    return mat4.array(_float16_pool.alloc(), value);\n  },\n\n  // [enums.PARAM_TEXTURE_2D]: function (value) {\n  // },\n\n  // [enums.PARAM_TEXTURE_CUBE]: function (value) {\n  // },\n};\n\nexport default class {\n  constructor(device, builtin) {\n    this._device = device;\n    this._builtin = builtin;\n    this._type2defaultValue = {\n      [enums.PARAM_INT]: 0,\n      [enums.PARAM_INT2]: vec2.new(0, 0),\n      [enums.PARAM_INT3]: vec3.new(0, 0, 0),\n      [enums.PARAM_INT4]: vec4.new(0, 0, 0, 0),\n      [enums.PARAM_FLOAT]: 0.0,\n      [enums.PARAM_FLOAT2]: vec2.new(0, 0),\n      [enums.PARAM_FLOAT3]: vec3.new(0, 0, 0),\n      [enums.PARAM_FLOAT4]: vec4.new(0, 0, 0, 0),\n      [enums.PARAM_COLOR3]: color3.new(0, 0, 0),\n      [enums.PARAM_COLOR4]: color4.new(0, 0, 0, 1),\n      [enums.PARAM_MAT2]: mat2.create(),\n      [enums.PARAM_MAT3]: mat3.create(),\n      [enums.PARAM_MAT4]: mat4.create(),\n      [enums.PARAM_TEXTURE_2D]: builtin.defaultTexture,\n      [enums.PARAM_TEXTURE_CUBE]: builtin.defaultTextureCube,\n    };\n    this._stage2fn = {};\n\n    this._drawItemsPools = new FramePool(() => {\n      return new RecyclePool(() => {\n        return {\n          node: null,\n          mesh: null,\n          material: null,\n        };\n      }, 100);\n    }, 16);\n\n    this._stageItemsPools = new FramePool(() => {\n      return new RecyclePool(() => {\n        return {\n          node: null,\n          mesh: null,\n          material: null,\n          technique: null,\n          zdist: -1,\n        };\n      }, 100);\n    }, 16);\n  }\n\n  _reset() {\n    this._drawItemsPools.reset();\n    this._stageItemsPools.reset();\n  }\n\n  _render(camera, scene, stages) {\n    const device = this._device;\n\n    // TODO: use camera's clearFalgs\n    device.setViewport(0, 0, camera._rect.w, camera._rect.h);\n    device.clear({\n      color: [0.3, 0.3, 0.3, 1],\n      depth: 1\n    });\n\n    // get all draw items\n    let allDrawItems = this._drawItemsPools.alloc();\n    allDrawItems.reset();\n\n    for (let i = 0; i < scene._models.length; ++i) {\n      let model = scene._models.data[i];\n\n      for (let m = 0; m < model.meshCount; ++m) {\n        let drawItem = allDrawItems.add();\n        model.getDrawItem(drawItem, m);\n      }\n    }\n\n    // TODO: update frustum\n    // TODO: visbility test\n    // frustum.update(camera._viewProj);\n\n    // dispatch draw items to different stage\n    _stageInfos.reset();\n\n    for (let i = 0; i < stages.length; ++i) {\n      let stage = stages[i];\n      let stageItems = this._stageItemsPools.alloc();\n      stageItems.reset();\n\n      for (let j = 0; j < allDrawItems.length; ++j) {\n        let drawItem = allDrawItems.data[j];\n        let tech = drawItem.material.getTechnique(stage);\n\n        if (tech) {\n          let stageItem = stageItems.add();\n          stageItem.node = drawItem.node;\n          stageItem.mesh = drawItem.mesh;\n          stageItem.material = drawItem.material;\n          stageItem.technique = tech;\n          stageItem.zdist = -1;\n        }\n      }\n\n      let stageInfo = _stageInfos.alloc();\n      stageInfo.stage = stage;\n      stageInfo.items = stageItems;\n    }\n\n    // render stages\n    for (let i = 0; i < _stageInfos.length; ++i) {\n      let info = _stageInfos.data[i];\n      let fn = this._stage2fn[info.stage];\n\n      fn(camera, info.items);\n    }\n  }\n\n  _draw(item) {\n    const device = this._device;\n    const node = item.node;\n    const mesh = item.mesh;\n    const material = item.material;\n    const technique = item.technique;\n\n    // reset the pool\n    // NOTE: we can use drawCounter optimize this\n    // TODO: should be configurable\n    _float2_pool.reset();\n    _float3_pool.reset();\n    _float4_pool.reset();\n    _float9_pool.reset();\n    _float16_pool.reset();\n    _int2_pool.reset();\n    _int3_pool.reset();\n    _int4_pool.reset();\n\n    // set common uniforms\n    // TODO: try commit this depends on material\n    // {\n    node.getWorldMatrix(_m4_tmp);\n    device.setUniform('model', mat4.array(_float16_pool.alloc(), _m4_tmp));\n\n    mat3.transpose(_m3_tmp, mat3.invert(_m3_tmp, mat3.fromMat4(_m3_tmp, _m4_tmp)));\n    device.setUniform('normalMatrix', mat3.array(_float9_pool.alloc(), _m3_tmp));\n    // }\n\n    // set technique uniforms\n    let slot = 0;\n    for (let i = 0; i < technique._parameters.length; ++i) {\n      let prop = technique._parameters[i];\n      let param = material.getValue(prop.name);\n\n      if (param === undefined) {\n        param = prop.val;\n      }\n\n      if (param === undefined) {\n        param = this._type2defaultValue[prop.type];\n      }\n\n      if (param === undefined) {\n        console.warn(`Failed to set technique property ${prop.name}, value not found.`);\n        continue;\n      }\n\n      if (\n        prop.type === enums.PARAM_TEXTURE_2D ||\n        prop.type === enums.PARAM_TEXTURE_CUBE\n      ) {\n        device.setTexture(prop.name, param, slot);\n        ++slot;\n      } else {\n        let convertFn = _type2uniformValue[prop.type];\n        let convertedValue = convertFn(param);\n        device.setUniform(prop.name, convertedValue);\n      }\n    }\n\n    // for each pass\n    for (let i = 0; i < technique._passes.length; ++i) {\n      let pass = technique._passes[i];\n\n      let count = mesh._vertexBuffer.count;\n\n      // set vertex buffer\n      device.setVertexBuffer(0, mesh._vertexBuffer);\n\n      // set index buffer\n      if (mesh._indexBuffer) {\n        device.setIndexBuffer(mesh._indexBuffer);\n        count = mesh._indexBuffer.count;\n      }\n\n      // set primitive type\n      device.setPrimitiveType(mesh._primitiveType);\n\n      // set program\n      device.setProgram(pass._program);\n\n      // cull mode\n      device.setCullMode(pass._cullMode);\n\n      // blend\n      if (pass._blend) {\n        device.enableBlend();\n        device.setBlendFuncSep(\n          pass._blendSrc,\n          pass._blendDst,\n          pass._blendSrcAlpha,\n          pass._blendDstAlpha\n        );\n        device.setBlendEqSep(\n          pass._blendEq,\n          pass._blendAlphaEq\n        );\n        device.setBlendColor32(pass._blendColor);\n      }\n\n      // depth test & write\n      if (pass._depthTest) {\n        device.enableDepthTest();\n        device.setDepthFunc(pass._depthFunc);\n      }\n      if (pass._depthWrite) {\n        device.enableDepthWrite();\n      }\n\n      // stencil\n      if (pass._stencilTest) {\n        device.enableStencilTest();\n\n        // front\n        device.setStencilFuncFront(\n          pass._stencilFuncFront,\n          pass._stencilRefFront,\n          pass._stencilMaskFront\n        );\n        device.setStencilOpFront(\n          pass._stencilFailOpFront,\n          pass._stencilZFailOpFront,\n          pass._stencilZPassOpFront,\n          pass._stencilWriteMaskFront\n        );\n\n        // back\n        device.setStencilFuncBack(\n          pass._stencilFuncBack,\n          pass._stencilRefBack,\n          pass._stencilMaskBack\n        );\n        device.setStencilOpBack(\n          pass._stencilFailOpBack,\n          pass._stencilZFailOpBack,\n          pass._stencilZPassOpBack,\n          pass._stencilWriteMaskBack\n        );\n      }\n\n      // draw pass\n      device.draw(0, count);\n    }\n  }\n}","import { vec3, mat4 } from 'vmath';\nimport { enums } from '../enums';\nimport Renderer from './base';\n\nlet _camPos = vec3.create();\nlet _camFwd = vec3.create();\nlet _v3_tmp1 = vec3.create();\n\nlet _a16_view = new Float32Array(16);\nlet _a16_proj = new Float32Array(16);\nlet _a16_viewProj = new Float32Array(16);\n\nexport default class extends Renderer {\n  constructor(device, builtin) {\n    super(device, builtin);\n\n    this._stage2fn[enums.STAGE_OPAQUE] = this._opaqueStage.bind(this);\n    this._stage2fn[enums.STAGE_TRANSPARENT] = this._transparentStage.bind(this);\n  }\n\n  render(camera, scene) {\n    this._reset();\n    camera.updateMatrix();\n\n    this._render(camera, scene, [\n      enums.STAGE_OPAQUE,\n      enums.STAGE_TRANSPARENT,\n    ]);\n  }\n\n  _opaqueStage(camera, items) {\n    // update uniforms\n    this._device.setUniform('view', mat4.array(_a16_view, camera._view));\n    this._device.setUniform('proj', mat4.array(_a16_proj, camera._proj));\n    this._device.setUniform('viewProj', mat4.array(_a16_viewProj, camera._viewProj));\n\n    // sort items\n    items.sort((a, b) => {\n      if (a.technique._layer !== b.technique._layer) {\n        return a.technique._layer - b.technique._layer;\n      }\n\n      return a.technique.sortID() - b.technique.sortID();\n    });\n\n    // draw it\n    for (let i = 0; i < items.length; ++i) {\n      let item = items.data[i];\n      this._draw(item);\n    }\n  }\n\n  _transparentStage(camera, items) {\n    // update uniforms\n    this._device.setUniform('view', mat4.array(_a16_view, camera._view));\n    this._device.setUniform('proj', mat4.array(_a16_proj, camera._proj));\n    this._device.setUniform('viewProj', mat4.array(_a16_viewProj, camera._viewProj));\n\n    // calculate zdist\n    camera._node.getWorldPos(_camPos);\n    vec3.set(_camFwd, -camera._view.m02, -camera._view.m06, -camera._view.m10);\n\n    for (let i = 0; i < items.length; ++i) {\n      let item = items.data[i];\n\n      // TODO: we should use mesh center instead!\n      item.node.getWorldPos(_v3_tmp1);\n\n      vec3.sub(_v3_tmp1, _v3_tmp1, _camPos);\n      item.zdist = vec3.dot(_v3_tmp1, _camFwd);\n    }\n\n    // sort items\n    items.sort((a, b) => {\n      if (a.technique._layer !== b.technique._layer) {\n        return a.technique._layer - b.technique._layer;\n      }\n\n      return b.zdist - a.zdist;\n    });\n\n    // draw it\n    for (let i = 0; i < items.length; ++i) {\n      let item = items.data[i];\n      this._draw(item);\n    }\n  }\n}","import initBuiltin from './builtin/index';\n\nimport ForwardRenderer from './renderer/forward';\n// import DeferredRenderer from './lib/deferred';\n\n/**\n * @param {Device} device\n * @param {Object} opts\n */\nexport default function (device) {\n  let builtin = initBuiltin(device);\n  let forward = new ForwardRenderer(device, builtin);\n\n  return {\n    builtin,\n    forward,\n  };\n}","import gfx from 'gfx';\n\nexport default class Mesh {\n  constructor(vb, ib, pt = gfx.PT_TRIANGLES) {\n    this._vertexBuffer = vb;\n    this._indexBuffer = ib;\n    this._primitiveType = pt;\n\n    // TODO: this._aabb;\n  }\n}","import gfx from 'gfx';\nimport Mesh from './resources/mesh';\n\n/**\n * @param {gfx.Device} device\n * @param {Object} data\n */\nexport function createMesh(device, data) {\n  if (!data.positions) {\n    console.error('The data must have positions field');\n    return null;\n  }\n\n  let verts = [];\n  let vcount = data.positions.length / 3;\n\n  for (let i = 0; i < vcount; ++i) {\n    verts.push(data.positions[3 * i], data.positions[3 * i + 1], data.positions[3 * i + 2]);\n\n    if (data.normals) {\n      verts.push(data.normals[3 * i], data.normals[3 * i + 1], data.normals[3 * i + 2]);\n    }\n\n    if (data.uvs) {\n      verts.push(data.uvs[2 * i], data.uvs[2 * i + 1]);\n    }\n  }\n\n  let vfmt = [];\n  vfmt.push({ name: gfx.ATTR_POSITION, type: gfx.ATTR_TYPE_FLOAT32, num: 3 });\n  if (data.normals) {\n    vfmt.push({ name: gfx.ATTR_NORMAL, type: gfx.ATTR_TYPE_FLOAT32, num: 3 });\n  }\n  if (data.uvs) {\n    vfmt.push({ name: gfx.ATTR_UV, type: gfx.ATTR_TYPE_FLOAT32, num: 2 });\n  }\n\n  let vb = new gfx.VertexBuffer(\n    device,\n    new gfx.VertexFormat(vfmt),\n    gfx.USAGE_STATIC,\n    new Float32Array(verts),\n    vcount,\n    false\n  );\n\n  let ib = null;\n  if (data.indices) {\n    ib = new gfx.IndexBuffer(\n      device,\n      gfx.INDEX_FMT_UINT16,\n      gfx.USAGE_STATIC,\n      new Uint16Array(data.indices),\n      data.indices.length,\n      false\n    );\n  }\n\n  return new Mesh(vb, ib);\n}","import gfx from 'gfx';\n\nexport default class Pass {\n  constructor(program) {\n    this._program = program;\n\n    // cullmode\n    this._cullMode = gfx.CULL_BACK;\n\n    // blending\n    this._blend = false;\n    this._blendEq = gfx.BLEND_FUNC_ADD;\n    this._blendAlphaEq = gfx.BLEND_FUNC_ADD;\n    this._blendSrc = gfx.BLEND_ONE;\n    this._blendDst = gfx.BLEND_ZERO;\n    this._blendSrcAlpha = gfx.BLEND_ONE;\n    this._blendDstAlpha = gfx.BLEND_ZERO;\n    this._blendColor = 0xffffffff;\n\n    // depth\n    this._depthTest = false;\n    this._depthWrite = false;\n    this._depthFunc = gfx.DS_FUNC_LESS,\n\n    // stencil\n    this._stencilTest = false;\n    // front\n    this._stencilFuncFront = gfx.DS_FUNC_ALWAYS;\n    this._stencilRefFront = 0;\n    this._stencilMaskFront = 0xff;\n    this._stencilFailOpFront = gfx.STENCIL_OP_KEEP;\n    this._stencilZFailOpFront = gfx.STENCIL_OP_KEEP;\n    this._stencilZPassOpFront = gfx.STENCIL_OP_KEEP;\n    this._stencilWriteMaskFront = 0xff;\n    // back\n    this._stencilFuncBack = gfx.DS_FUNC_ALWAYS;\n    this._stencilRefBack = 0;\n    this._stencilMaskBack = 0xff;\n    this._stencilFailOpBack = gfx.STENCIL_OP_KEEP;\n    this._stencilZFailOpBack = gfx.STENCIL_OP_KEEP;\n    this._stencilZPassOpBack = gfx.STENCIL_OP_KEEP;\n    this._stencilWriteMaskBack = 0xff;\n  }\n\n  setCullMode(cullMode) {\n    this._cullMode = cullMode;\n  }\n\n  setBlend(\n    blendEq = gfx.BLEND_FUNC_ADD,\n    blendSrc = gfx.BLEND_ONE,\n    blendDst = gfx.BLEND_ZERO,\n    blendAlphaEq = gfx.BLEND_FUNC_ADD,\n    blendSrcAlpha = gfx.BLEND_ONE,\n    blendDstAlpha = gfx.BLEND_ZERO,\n    blendColor = 0xffffffff\n  ) {\n    this._blend = true;\n    this._blendEq = blendEq;\n    this._blendSrc = blendSrc;\n    this._blendDst = blendDst;\n    this._blendAlphaEq = blendAlphaEq;\n    this._blendSrcAlpha = blendSrcAlpha;\n    this._blendDstAlpha = blendDstAlpha;\n    this._blendColor = blendColor;\n  }\n\n  setDepth(\n    depthTest = false,\n    depthWrite = false,\n    depthFunc = gfx.DS_FUNC_LESS\n  ) {\n    this._depthTest = depthTest;\n    this._depthWrite = depthWrite;\n    this._depthFunc = depthFunc;\n  }\n\n  setStencilFront(\n    stencilFunc = gfx.DS_FUNC_ALWAYS,\n    stencilRef = 0,\n    stencilMask = 0xff,\n    stencilFailOp = gfx.STENCIL_OP_KEEP,\n    stencilZFailOp = gfx.STENCIL_OP_KEEP,\n    stencilZPassOp = gfx.STENCIL_OP_KEEP,\n    stencilWriteMask = 0xff\n  ) {\n    this._stencilTest = true;\n    this._stencilFuncFront = stencilFunc;\n    this._stencilRefFront = stencilRef;\n    this._stencilMaskFront = stencilMask;\n    this._stencilFailOpFront = stencilFailOp;\n    this._stencilZFailOpFront = stencilZFailOp;\n    this._stencilZPassOpFront = stencilZPassOp;\n    this._stencilWriteMaskFront = stencilWriteMask;\n  }\n\n  setStencilBack(\n    stencilFunc = gfx.DS_FUNC_ALWAYS,\n    stencilRef = 0,\n    stencilMask = 0xff,\n    stencilFailOp = gfx.STENCIL_OP_KEEP,\n    stencilZFailOp = gfx.STENCIL_OP_KEEP,\n    stencilZPassOp = gfx.STENCIL_OP_KEEP,\n    stencilWriteMask = 0xff\n  ) {\n    this._stencilTest = true;\n    this._stencilFuncBack = stencilFunc;\n    this._stencilRefBack = stencilRef;\n    this._stencilMaskBack = stencilMask;\n    this._stencilFailOpBack = stencilFailOp;\n    this._stencilZFailOpBack = stencilZFailOp;\n    this._stencilZPassOpBack = stencilZPassOp;\n    this._stencilWriteMaskBack = stencilWriteMask;\n  }\n}","let _genID = 0;\n\nexport default class Technique {\n  /**\n   * @param {STAGE_*} stages\n   * @param {Array} parameters\n   * @param {Array} passes\n   * @param {Number} layer\n   */\n  constructor(stages, parameters, passes, layer = 0) {\n    this._id = _genID++;\n    this._stages = stages;\n    this._parameters = parameters; // {name, type, size, val}\n    this._passes = passes;\n    this._layer = layer;\n    // TODO: this._version = 'webgl' or 'webgl2' // ????\n  }\n\n  sortID () {\n    if (!this._passes.length) {\n      return -1;\n    }\n\n    return (\n      (this._passes.length & 0xf) << 24 |\n      (this._passes[0]._program.id & 0xfff) << 12 |\n      (this._id & 0xffff)\n    ) >>> 0;\n  }\n}","export default class Material {\n  /**\n   * @param {Array} techniques\n   */\n  constructor(techniques, values = {}) {\n    this._techniques = techniques;\n    this._values = values;\n\n    // TODO: check if params is valid for current technique???\n  }\n\n  getTechnique(stage) {\n    for (let i = 0; i < this._techniques.length; ++i) {\n      let tech = this._techniques[i];\n      if (tech._stages & stage) {\n        return tech;\n      }\n    }\n\n    return null;\n  }\n\n  getValue(name) {\n    return this._values[name];\n  }\n\n  setValue(name, value) {\n    // TODO: check if params is valid for current technique???\n\n    this._values[name] = value;\n  }\n}","import { color3 } from 'vmath';\n\nexport default class Light {\n  constructor() {\n    this._node = null;\n    this._color = color3.create();\n  }\n\n  setNode(node) {\n    this._node = node;\n  }\n}","import { color4, mat4 } from 'vmath';\nimport { enums } from '../enums';\n\nexport default class Camera {\n  constructor() {\n    this._node = null;\n    this._perspective = enums.PP_PROJECTION;\n\n    // projection properties\n    this._near = 0.01;\n    this._far = 1000.0;\n    this._fov = Math.PI/4.0; // vertical fov\n    // this._aspect = 16.0/9.0; // DISABLE: use _rect.w/_rect.h\n\n    // ortho properties\n    this._orthoHeight = 10;\n\n    // view properties\n    this._rect = {\n      x: 0, y: 0, w: 1, h: 1\n    };\n    this._scissor = {\n      x: 0, y: 0, w: 1, h: 1\n    };\n\n    // clear options\n    this._color = color4.create();\n    // TODO: this._clearFlags\n\n    // matrix\n    this._view = mat4.create();\n    this._proj = mat4.create();\n    this._viewProj = mat4.create();\n    this._invViewProj = mat4.create();\n  }\n\n  setNode(node) {\n    this._node = node;\n  }\n\n  updateMatrix() {\n    // view matrix\n    this._node.getWorldMatrix(this._view);\n    mat4.invert(this._view, this._view);\n\n    // projection matrix\n    // TODO: if this._projDirty\n    let aspect = this._rect.w / this._rect.h;\n    if (this._perspective === enums.PP_PROJECTION) {\n      mat4.perspective(this._proj,\n        this._fov,\n        aspect,\n        this._near,\n        this._far\n      );\n    } else {\n      let x = this._orthoHeight * aspect;\n      let y = this._orthoHeight;\n      mat4.ortho(this._proj,\n        -x, x, -y, y, this._near, this._far\n      );\n    }\n\n    // view-projection\n    mat4.mul(this._viewProj, this._proj, this._view);\n    mat4.invert(this._invViewProj, this._viewProj);\n  }\n}","export default class Model {\n  constructor() {\n    this._node = null;\n    this._meshes = [];\n    this._materials = [];\n  }\n\n  setNode(node) {\n    this._node = node;\n  }\n\n  addMesh(mesh) {\n    if (this._meshes.indexOf(mesh) !== -1) {\n      return;\n    }\n    this._meshes.push(mesh);\n  }\n\n  addMaterial(material) {\n    if (this._materials.indexOf(material) !== -1) {\n      return;\n    }\n    this._materials.push(material);\n  }\n\n  get meshCount() {\n    return this._meshes.length;\n  }\n\n  getDrawItem(out, index) {\n    if (index >= this._meshes.length ) {\n      out.node = null;\n      out.mesh = null;\n      out.material = null;\n\n      return;\n    }\n\n    out.node = this._node;\n    out.mesh = this._meshes[index];\n    if (index < this._materials.length) {\n      out.material = this._materials[index];\n    } else {\n      out.material = this._materials[this._materials.length-1];\n    }\n  }\n}","import { FixedArray } from 'memop';\n\nexport default class Scene {\n  constructor() {\n    this._lights = new FixedArray(16);\n    this._models = new FixedArray(16);\n  }\n\n  addModel(model) {\n    let idx = this._models.indexOf(model);\n    if (idx === -1) {\n      this._models.push(model);\n    }\n  }\n\n  removeModel(model) {\n    let idx = this._models.indexOf(model);\n    if (idx !== -1) {\n      this._models.fastRemove(idx);\n    }\n  }\n}","import create from './lib/init';\nimport { enums } from './lib/enums';\nimport { createMesh } from './lib/utils';\n\nimport Pass from './lib/resources/pass';\nimport Technique from './lib/resources/technique';\nimport Material from './lib/resources/material';\nimport Mesh from './lib/resources/mesh';\n\nimport Light from './lib/scene/light';\nimport Camera from './lib/scene/camera';\nimport Model from './lib/scene/model';\nimport Scene from './lib/scene/scene';\n\nimport Renderer from './lib/renderer/base';\nimport ForwardRenderer from './lib/renderer/forward';\n\nlet renderer = {\n  // functions\n  create,\n  createMesh,\n\n  // classes\n  Pass,\n  Technique,\n  Material,\n  Mesh,\n\n  Light,\n  Camera,\n  Model,\n  Scene,\n\n  Renderer,\n  ForwardRenderer,\n};\nObject.assign(renderer, enums);\n\nexport default renderer;"],"names":["let","const","mat3","mat4","FramePool","vec2","vec3","vec4","color3","color4","mat2","RecyclePool","i","this","drawItem","super","item","FixedArray"],"mappings":"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"}